name: PHP Composer

on:
  push:
    branches: [ master ]
#   pull_request:
#     branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

    - name: test
      run: |
          PRODUCT_VER=`cat VERSION`
          echo ${{ PRODUCT_VER }}
          echo ${ PRODUCT_VER }

#     - name: Validate composer.json and composer.lock
#       run: composer validate --strict

#     - name: Cache Composer packages
#       id: composer-cache
#       uses: actions/cache@v2
#       with:
#         php-version: '7.4'
#         path: vendor
#         key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
#         restore-keys: |
#           ${{ runner.os }}-php-

#     - name: Setup PHP version
#       uses: shivammathur/setup-php@v2
#       with:
#         php-version: 7.4

#     - name: Install Composer dependencies
#       run: composer install

#     - name: Install NPM dependencies
#       run: |
#           chmod +x ./travis.sh
#           ./travis.sh -t npm
          
#     - name: Compile static files
#       run: ./travis.sh -t build
      
#     - name: BUild a package
#       run: ./travis.sh -t pack

#     - name: Create test file
#       run: echo "some text" > package.txt
      
#     - name: Upaload package
# #       run: ./travis.sh -t upload
#       run: curl -v --ftp-create-dirs --retry 6 -T ${{ secrets.PRODUCT_NAME }}_${PRODUCT_VERSION}.zip  -u ${{ secrets.FTP_USER }}:${{ secrets.FTP_PASSWORD }} ftp://afterlogic.com/
    

    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    # - name: Run test suite
    #   run: composer run-script test
